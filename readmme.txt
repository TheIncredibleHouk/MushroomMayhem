FireSnake_Frame = Objects_Data1
FireSnake_FallThrough = Objects_Data2
FireSnake_CanJump = Objects_Data3
FireSnake_BufferOffset = Objects_Data4
FireSnake_Ticker = Objects_Data5
FireSnake_MakeFire = Objects_Data6

FireSnakeFlips:
	.byte $00, SPR_HFLIP

FireSnake_Jumps:
	.byte $E0, $E0, $D8, $C8, $BA, $B2, $A8, $A0, $98, $90, $8A, $8A, $8A, $8A, $8A, $8A

FireSnake_BufferOffsets:
	.byte 00, 16

ObjInit_FireSnake:
	LDA #BOUND16x16
	STA Objects_BoundBox, X

	LDA #$06
	STA Objects_SpritesRequested, X

	LDA #(ATTR_FIREPROOF | ATTR_DASHPROOF | ATTR_STOMPPROOF)
	STA Objects_WeaponAttr, X

	LDA #(ATTR_NOICE | ATTR_WINDAFFECTS)
	STA Objects_BehaviorAttr, X

	JSR Object_InitBuffer

	LDA FireSnake_BufferOffsets, Y
	STA FireSnake_BufferOffset, X
	TAY

	LDA #$0F
	STA <Temp_Var1
	
FireSnake_InitLoop:
	LDA <Objects_XZ, X
	STA Object_BufferX, Y

	LDA <Objects_YZ, X
	STA Object_BufferY, Y

	INY
	DEC <Temp_Var1
	BPL FireSnake_InitLoop

	JMP Object_CalcBoundBox

ObjNorm_FireSnake:
	LDA Objects_State, X
	CMP #OBJSTATE_KILLED
	BNE FireSnake_NotDead

	LDY FireSnake_BufferOffset, X
	
	LDA #$00
	STA Buffer_Occupied, Y

	LDY Objects_SpawnIdx, X

	LDA Level_ObjectsSpawned, Y
	AND #$7f
	STA Level_ObjectsSpawned, Y

	JMP Object_PoofDie

FireSnake_NotDead:
	LDA <Player_HaltGameZ
	BEQ FireSnake_Norm	 ; If gameplay is NOT halted, jump to PRG003_BD95

	JMP FireSnake_Draw

FireSnake_Norm:
	INC FireSnake_Ticker, X

	LDA #$20
	JSR Object_DeleteOffScreenRange
	
	LDA Objects_State, X
	CMP #OBJSTATE_NORMAL
	BEQ FireSnake_Move

	LDA #$00
	STA Buffer_Occupied, Y

FireSnake_Move:
	LDA FireSnake_Ticker, X
	AND #$01
	BNE FireSnake_NoMove

	JSR Object_Move

FireSnake_NoMove:
	LDA <Objects_YVelZ, X
	CMP #$18
	BMI FireSnake_NoYVelCap
	BCC FireSnake_NoYVelCap

	LDA #$20
	STA <Objects_YVelZ, X

FireSnake_NoYVelCap:
	
	JSR FireSnake_MoveTail
	JSR Object_CalcBoundBox
	JSR Object_AttackOrDefeat
	JSR Object_DetectTiles
	
	LDA FireSnake_FallThrough, X
	BEQ FireSnake_InteractWorld
	
	DEC FireSnake_FallThrough, X
	
	LDA <Objects_TilesDetectZ, X
	AND #~HIT_GROUND
	STA <Objects_TilesDetectZ, X
	
FireSnake_InteractWorld:	
	JSR Object_InteractWithTiles
	JSR FireSnake_MeltIce

	LDA <Objects_TilesDetectZ, X
	AND #HIT_GROUND
	BEQ FireSnake_NoFire

	LDA Object_BodyTileProp, X
	CMP #TILE_PROP_ENEMY
	BNE FireSnake_NoFire

	LDA <Objects_XZ, X
	ADD #$07
	STA Block_DetectX
	STA Tile_X

	LDA <Objects_XHiZ, X
	ADC #$00
	STA Block_DetectXHi
	STA Tile_XHi

	LDA <Objects_YZ, X
	ADD #$07
	STA Block_DetectY
	STA Tile_Y

	LDA <Objects_YHiZ, X
	ADC #$00
	STA Block_DetectYHi
	STA Tile_YHi

	STA Debug_Snap
	LDA Object_BodyTileValue, X
	STA Tile_LastValue

	LDA <Objects_XZ, X
	ADD #$08
	STA Block_ChangeX

	LDA <Objects_XHiZ, X
	ADC #$00
	STA Block_ChangeXHi

	LDA <Objects_YZ, X
	ADD #$08
	STA Block_ChangeY

	LDA <Objects_YHiZ, X
	ADC #$00
	STA Block_ChangeYHi

	JSR Tile_WriteTempChange
	BCC FireSnake_NoFire
	
	LDA #$10
	STA SpinnerBlocksTimers, Y

	LDX <CurrentObjectIndexZ

	LDA Tile_LastValue
	EOR #$01
	JSR Object_ChangeBlock

FireSnake_NoFire:
	
	LDA FireSnake_CanJump, X
	BEQ FireSnake_TryCanJump

	LDA Objects_Timer, X
	BNE FireSnake_Animate

	JSR Object_YDistanceFromPlayer
	LDA <YDiffAboveBelow
	BEQ FireSnake_DetermineJump

	LDA #$20
	STA Objects_Timer3, X

	LDY #$00

FireSnake_DetermineJump:
	LDA <YDiff
	LSR A
	LSR A
	LSR A
	LSR A
	TAY

	INY

FireSnake_DoJump:
	LDA FireSnake_Jumps, Y
	STA <Objects_YVelZ, X

	CPY #$00
	BNE FireSnake_TowardsPlayer

	LDA #$20
	STA Objects_Timer3, X

FireSnake_TowardsPlayer:

	JSR Object_MoveTowardsPlayerFast

	LDA #$00
	STA FireSnake_CanJump, X

	JMP FireSnake_Animate

FireSnake_TryCanJump:

	LDA <Objects_TilesDetectZ, X
	AND #HIT_GROUND
	BEQ FireSnake_Animate

	INC FireSnake_CanJump, X
	
	LDA #$20
	STA Objects_Timer, X

	LDA #$00
	STA <Objects_XVelZ, X

FireSnake_Animate:
	INC FireSnake_Frame, X
	LDA FireSnake_Frame, X
	LSR A
	AND #$01
	STA Objects_Frame, X

	LDA FireSnake_Frame, X
	LSR A
	LSR A
	AND #$01
	TAY
	LDA Objects_Orientation, X
	AND #~SPR_HFLIP

	ORA FireSnakeFlips, Y
	STA Objects_Orientation, X
	JMP FireSnake_Draw

FireSnake_MoveTail:
	LDA FireSnake_Ticker, X
	AND #$01
	BNE MoveTail_RTS


	LDA #$0E
	STA <Temp_Var1

	LDA FireSnake_BufferOffset, X
	ADD #$0E
	TAY


MoveTail_Loop:

	LDA Object_BufferX, Y
	STA Object_BufferX + 1, Y

	LDA Object_BufferY, Y
	STA Object_BufferY + 1, Y
	DEY
	DEC <Temp_Var1
	BPL MoveTail_Loop

	INY
	LDA <Objects_XZ, X
	STA Object_BufferX, Y

	LDA <Objects_YZ, X
	STA Object_BufferY, Y

MoveTail_RTS:
	RTS
